#!/usr/bin/env python3
"""
Script de verificaci√≥n del modelo de dominio - Ticket 2
Demuestra la funcionalidad de las entidades de dominio sin dependencias externas
"""

from datetime import datetime, timezone
from src.domain.entities import NewsArticle, Source, ScrapingJob
from src.domain.enums import NewsSource


def main():
    print("=" * 60)
    print("VERIFICACI√ìN DEL MODELO DE DOMINIO - TICKET 2")
    print("=" * 60)
    print()

    print("1. Creaci√≥n de NewsArticle")
    print("-" * 60)
    article = NewsArticle.create(
        titulo="Espa√±a gana el campeonato mundial",
        contenido="En un emocionante partido, Espa√±a se coron√≥ campe√≥n...",
        fuente="ElPais.com",
        fecha_publicacion=datetime.now(timezone.utc),
        url="https://elpais.com/deportes/2024/champions",
        categoria="Deportes",
    )
    print(f"‚úÖ Art√≠culo creado con ID: {article.id}")
    print(f"   T√≠tulo: {article.titulo}")
    print(f"   Fuente: {article.fuente}")
    print(f"   Procesado: {article.procesado}")
    print()

    print("2. Modificaci√≥n de NewsArticle")
    print("-" * 60)
    article.mark_as_processed()
    print(f"‚úÖ Art√≠culo marcado como procesado: {article.procesado}")
    article.update_category("Deportes/F√∫tbol")
    print(f"‚úÖ Categor√≠a actualizada: {article.categoria}")
    print()

    print("3. Creaci√≥n de Source")
    print("-" * 60)
    source = Source.create(source_type=NewsSource.CLARIN)
    print(f"‚úÖ Fuente creada con ID: {source.id}")
    print(f"   Nombre: {source.nombre}")
    print(f"   Dominio: {source.dominio}")
    print(f"   Pa√≠s: {source.pais}")
    print(f"   Activo: {source.activo}")
    print()

    print("4. Modificaci√≥n de Source")
    print("-" * 60)
    source.deactivate()
    print(f"‚úÖ Fuente desactivada: {source.activo}")
    source.activate()
    print(f"‚úÖ Fuente reactivada: {source.activo}")
    print()

    print("5. Listado de todas las fuentes disponibles")
    print("-" * 60)
    for news_source in NewsSource.all_sources():
        print(f"   - {news_source.nombre}: {news_source.dominio}")
    print()

    print("6. Creaci√≥n y ciclo de vida de ScrapingJob")
    print("-" * 60)
    job = ScrapingJob.create(fuente="Clar√≠n")
    print(f"‚úÖ Job creado con ID: {job.id}")
    print(f"   Status inicial: {job.status}")
    print(f"   Total art√≠culos: {job.total_articulos}")
    print()

    job.start()
    print(f"‚úÖ Job iniciado - Status: {job.status}")

    for i in range(5):
        job.increment_articles()
    print(f"‚úÖ Art√≠culos procesados: {job.total_articulos}")

    job.complete(job.total_articulos)
    print(f"‚úÖ Job completado - Status: {job.status}")
    print(f"   Total final: {job.total_articulos}")
    print(f"   Duraci√≥n: {job.fecha_fin - job.fecha_inicio}")
    print()

    print("=" * 60)
    print("‚úÖ VERIFICACI√ìN COMPLETADA - TODAS LAS ENTIDADES FUNCIONAN")
    print("=" * 60)
    print()
    print("üìã Resumen:")
    print("   - NewsArticle: Creaci√≥n, procesado, actualizaci√≥n ‚úÖ")
    print("   - Source: Creaci√≥n, activaci√≥n/desactivaci√≥n ‚úÖ")
    print("   - ScrapingJob: Ciclo de vida completo ‚úÖ")
    print("   - Sin dependencias externas ‚úÖ")
    print("   - C√≥digo limpio y tipado ‚úÖ")


if __name__ == "__main__":
    main()
